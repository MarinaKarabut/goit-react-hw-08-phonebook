{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { createAction } from '@reduxjs/toolkit';\nimport types from './contacts-types';\n\nconst items = (state = [], {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case types.ADD:\n      return [...state, payload];\n\n    case types.DELETE:\n      return state.filter(({\n        id\n      }) => id !== payload);\n\n    default:\n      return state;\n  }\n};\n\nconst filter = createAction(types.FILTER); // const filter = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case types.FILTER:\n//       return payload;\n//     default:\n//       return state;\n//   }\n// };\n\nexport default combineReducers({\n  items,\n  filter\n});","map":{"version":3,"sources":["/Users/marina/Frontend/projects/js-react-projects/goit-react-hw-06-phonebook/src/redux/contacts-reducer.js"],"names":["combineReducers","createAction","types","items","state","type","payload","ADD","DELETE","filter","id","FILTER"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,YAAT,QAA6B,kBAA7B;AAEA,OAAOC,KAAP,MAAkB,kBAAlB;;AAEA,MAAMC,KAAK,GAAG,CAACC,KAAK,GAAG,EAAT,EAAa;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAb,KAAmC;AAC/C,UAAQD,IAAR;AACE,SAAKH,KAAK,CAACK,GAAX;AACE,aAAO,CAAC,GAAGH,KAAJ,EAAWE,OAAX,CAAP;;AACF,SAAKJ,KAAK,CAACM,MAAX;AACE,aAAOJ,KAAK,CAACK,MAAN,CAAa,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAYA,EAAE,KAAKJ,OAAhC,CAAP;;AAEF;AACE,aAAOF,KAAP;AAPJ;AASD,CAVD;;AAYA,MAAMK,MAAM,GAAGR,YAAY,CAACC,KAAK,CAACS,MAAP,CAA3B,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,eAAeX,eAAe,CAAC;AAC7BG,EAAAA,KAD6B;AAE7BM,EAAAA;AAF6B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\nimport { createAction } from '@reduxjs/toolkit';\n\nimport types from './contacts-types';\n\nconst items = (state = [], { type, payload }) => {\n  switch (type) {\n    case types.ADD:\n      return [...state, payload];\n    case types.DELETE:\n      return state.filter(({ id }) => id !== payload);\n\n    default:\n      return state;\n  }\n};\n\nconst filter = createAction(types.FILTER);\n\n// const filter = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case types.FILTER:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\nexport default combineReducers({\n  items,\n  filter,\n});\n"]},"metadata":{},"sourceType":"module"}