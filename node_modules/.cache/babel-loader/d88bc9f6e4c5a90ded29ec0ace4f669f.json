{"ast":null,"code":"var _jsxFileName = \"/Users/marina/Frontend/projects/js-react-projects/goit-react-hw-06-phonebook/src/client/Phonebook/Phonebook.jsx\";\nimport React, { Component } from 'react';\nimport ContactForm from '../components/ContactForm';\nimport Filter from '../components/Filter/Filter';\nimport ContactList from '../components/ContactList/ContactList';\nimport { v4 as uuidv4 } from 'uuid';\nimport styles from './Phonebook.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Phonebook extends Component {\n  // state = {\n  //   contacts: [\n  //     // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  //     // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  //     // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  //     // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  //   ],\n  //   filter: '',\n  // };\n  //  componentDidMount() {\n  //   const contactsList = JSON.parse(localStorage.getItem('contacts'))\n  //   this.setState({ contacts: contactsList || []})\n  //   }\n  // componentDidUpdate() {\n  //   const { contacts } = this.state\n  //   const contactsList = JSON.stringify(contacts)\n  //   localStorage.setItem('contacts', contactsList)\n  // }\n  // addContacts = ({ name, number }) => {\n  //   const { contacts } = this.state;\n  //   const newContact = {\n  //     id: uuidv4(),\n  //     name,\n  //     number,\n  //   };\n  //   if (\n  //     contacts.find(\n  //       ({ name }) => name.toLowerCase() === newContact.name.toLowerCase(),\n  //     )\n  //   ) {\n  //     alert(`${newContact.name} is already in contacts!`);\n  //   } else if (contacts.find(({ number }) => number === newContact.number)) {\n  //     alert(`${newContact.number} is already in contacts!`);\n  //   } else {\n  //   this.setState(({ contacts }) => ({\n  //     contacts: [...contacts, newContact],\n  //   }));\n  //   }\n  // };\n  // onDeleteContacts = idx => {\n  //   this.setState(({ contacts }) => {\n  //     const newContacts = [...contacts];\n  //     newContacts.splice(idx, 1);\n  //     return {\n  //       contacts: newContacts,\n  //     };\n  //   });\n  // };\n  // handleChange = ({target}) => {\n  //   const { value } = target;\n  //   this.setState({ filter: value });\n  // };\n  // getVisibleContacts = () => {\n  //   const { contacts, filter } = this.state;\n  //   const normalizedFilter = filter.toLowerCase();\n  //   if (!filter) {\n  //     return contacts\n  //   }\n  //   return contacts.filter(({name}) => name.toLowerCase().includes(normalizedFilter));\n  // };\n  render() {\n    // const { filter, contacts } = this.state;\n    // const {\n    //   handleChange,\n    //   addContacts,\n    //   onDeleteContacts,\n    //   getVisibleContacts,\n    // } = this;\n    // const visibleContacts = getVisibleContacts();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.box,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.tittle,\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Phonebook;","map":{"version":3,"sources":["/Users/marina/Frontend/projects/js-react-projects/goit-react-hw-06-phonebook/src/client/Phonebook/Phonebook.jsx"],"names":["React","Component","ContactForm","Filter","ContactList","v4","uuidv4","styles","Phonebook","render","box","tittle"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AAEA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;;;AAEA,MAAMC,SAAN,SAAwBP,SAAxB,CAAkC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEAQ,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,wBACE;AAAK,MAAA,SAAS,EAAEF,MAAM,CAACG,GAAvB;AAAA,8BACE;AAAI,QAAA,SAAS,EAAEH,MAAM,CAACI,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD;;AAtG+B;;AAyGlC,eAAeH,SAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport ContactForm from '../components/ContactForm';\nimport Filter from '../components/Filter/Filter';\nimport ContactList from '../components/ContactList/ContactList';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport styles from './Phonebook.module.css';\n\nclass Phonebook extends Component {\n  // state = {\n  //   contacts: [\n  //     // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  //     // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  //     // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  //     // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  //   ],\n  //   filter: '',\n  // };\n\n  //  componentDidMount() {\n  //   const contactsList = JSON.parse(localStorage.getItem('contacts'))\n  //   this.setState({ contacts: contactsList || []})\n\n  //   }\n\n  // componentDidUpdate() {\n  //   const { contacts } = this.state\n  //   const contactsList = JSON.stringify(contacts)\n  //   localStorage.setItem('contacts', contactsList)\n  // }\n\n\n  // addContacts = ({ name, number }) => {\n  //   const { contacts } = this.state;\n  //   const newContact = {\n  //     id: uuidv4(),\n  //     name,\n  //     number,\n  //   };\n  //   if (\n  //     contacts.find(\n  //       ({ name }) => name.toLowerCase() === newContact.name.toLowerCase(),\n  //     )\n  //   ) {\n  //     alert(`${newContact.name} is already in contacts!`);\n  //   } else if (contacts.find(({ number }) => number === newContact.number)) {\n  //     alert(`${newContact.number} is already in contacts!`);\n  //   } else {\n  //   this.setState(({ contacts }) => ({\n  //     contacts: [...contacts, newContact],\n  //   }));\n  //   }\n  // };\n\n  // onDeleteContacts = idx => {\n  //   this.setState(({ contacts }) => {\n  //     const newContacts = [...contacts];\n  //     newContacts.splice(idx, 1);\n  //     return {\n  //       contacts: newContacts,\n  //     };\n  //   });\n  // };\n\n  // handleChange = ({target}) => {\n  //   const { value } = target;\n  //   this.setState({ filter: value });\n  // };\n\n  // getVisibleContacts = () => {\n  //   const { contacts, filter } = this.state;\n  //   const normalizedFilter = filter.toLowerCase();\n  //   if (!filter) {\n  //     return contacts\n  //   }\n\n  //   return contacts.filter(({name}) => name.toLowerCase().includes(normalizedFilter));\n  // };\n\n  render() {\n    // const { filter, contacts } = this.state;\n    // const {\n    //   handleChange,\n    //   addContacts,\n    //   onDeleteContacts,\n    //   getVisibleContacts,\n    // } = this;\n\n    // const visibleContacts = getVisibleContacts();\n\n    return (\n      <div className={styles.box}>\n        <h1 className={styles.tittle}>Phonebook</h1>\n        <ContactForm  />\n        {/* <h2 className={styles.tittle}>Contacts</h2>\n        {contacts.length > 1 && (\n          <Filter value={filter} onChange={handleChange} />\n        )} */}\n        {/* {(contacts.length >0) ? (\n          <ContactList\n            contacts={visibleContacts}\n            onDeleteContacts={onDeleteContacts}\n          />\n        ) : (\n          <p className={styles.notification}>\n            Your phonebook is empty. Please add contact.\n          </p>\n        )} */}\n      </div>\n    );\n  }\n}\n\nexport default Phonebook;\n"]},"metadata":{},"sourceType":"module"}