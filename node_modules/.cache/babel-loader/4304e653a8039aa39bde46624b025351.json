{"ast":null,"code":"import axios from 'axios';\nimport { fetchContactsRequest, fetchContactsSuccess, fetchContactsError, addContactRequest, addContactSuccess, addContactError, deleteContactRequest, deleteContactSuccess, deleteContactError } from './contacts-actions'; // axios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nexport const fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const {\n      data\n    } = await axios.get('/contacts');\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error.message));\n  }\n};\nexport const addContact = (name, number) => async dispatch => {\n  const contact = {\n    name,\n    number\n  };\n  dispatch(addContactRequest());\n\n  try {\n    const {\n      data\n    } = axios.post('/contacts', contact);\n    console.log(data);\n    dispatch(addContactSuccess(data));\n  } catch (error) {\n    dispatch(addContactError(error.message));\n  }\n};\nexport const deleteContact = id => async dispatch => {\n  dispatch(deleteContactRequest());\n\n  try {\n    const {\n      data\n    } = axios.delete(`/contacts/${id}`);\n    dispatch(deleteContactSuccess(data));\n  } catch (error) {\n    dispatch(deleteContactError(error.message));\n  }\n};","map":{"version":3,"sources":["/Users/marina/Frontend/projects/js-react-projects/goit-react-hw-08-phonebook/src/redux/contacts/contacts-operations.js"],"names":["axios","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","fetchContacts","dispatch","data","get","error","message","addContact","name","number","contact","post","console","log","deleteContact","id","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACEC,oBADF,EAEEC,oBAFF,EAGEC,kBAHF,EAIEC,iBAJF,EAKEC,iBALF,EAMEC,eANF,EAOEC,oBAPF,EAQEC,oBARF,EASEC,kBATF,QAUO,oBAVP,C,CAYA;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM,MAAMC,QAAN,IAAkB;AACnDA,EAAAA,QAAQ,CAACV,oBAAoB,EAArB,CAAR;;AAEA,MAAI;AACF,UAAM;AAAEW,MAAAA;AAAF,QAAW,MAAMZ,KAAK,CAACa,GAAN,CAAU,WAAV,CAAvB;AACAF,IAAAA,QAAQ,CAACT,oBAAoB,CAACU,IAAD,CAArB,CAAR;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACdH,IAAAA,QAAQ,CAACR,kBAAkB,CAACW,KAAK,CAACC,OAAP,CAAnB,CAAR;AACD;AACF,CATM;AAWP,OAAO,MAAMC,UAAU,GAAG,CAACC,IAAD,EAAOC,MAAP,KAAkB,MAAMP,QAAN,IAAkB;AAC5D,QAAMQ,OAAO,GAAG;AACdF,IAAAA,IADc;AAEdC,IAAAA;AAFc,GAAhB;AAKAP,EAAAA,QAAQ,CAACP,iBAAiB,EAAlB,CAAR;;AAEA,MAAI;AACF,UAAM;AAAEQ,MAAAA;AAAF,QAAWZ,KAAK,CAACoB,IAAN,CAAW,WAAX,EAAwBD,OAAxB,CAAjB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACAD,IAAAA,QAAQ,CAACN,iBAAiB,CAACO,IAAD,CAAlB,CAAR;AACD,GAJD,CAIE,OAAOE,KAAP,EAAc;AACdH,IAAAA,QAAQ,CAACL,eAAe,CAACQ,KAAK,CAACC,OAAP,CAAhB,CAAR;AACD;AACF,CAfM;AAiBP,OAAO,MAAMQ,aAAa,GAAGC,EAAE,IAAI,MAAMb,QAAN,IAAkB;AACnDA,EAAAA,QAAQ,CAACJ,oBAAoB,EAArB,CAAR;;AAEA,MAAI;AACF,UAAM;AAAEK,MAAAA;AAAF,QAAWZ,KAAK,CAACyB,MAAN,CAAc,aAAYD,EAAG,EAA7B,CAAjB;AACAb,IAAAA,QAAQ,CAACH,oBAAoB,CAACI,IAAD,CAArB,CAAR;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACdH,IAAAA,QAAQ,CAACF,kBAAkB,CAACK,KAAK,CAACC,OAAP,CAAnB,CAAR;AACD;AACF,CATM","sourcesContent":["import axios from 'axios';\n\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\n\n// axios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nexport const fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error.message));\n  }\n};\n\nexport const addContact = (name, number) => async dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  try {\n    const { data } = axios.post('/contacts', contact);\n    console.log(data);\n    dispatch(addContactSuccess(data));\n  } catch (error) {\n    dispatch(addContactError(error.message));\n  }\n};\n\nexport const deleteContact = id => async dispatch => {\n  dispatch(deleteContactRequest());\n\n  try {\n    const { data } = axios.delete(`/contacts/${id}`);\n    dispatch(deleteContactSuccess(data));\n  } catch (error) {\n    dispatch(deleteContactError(error.message));\n  }\n};\n"]},"metadata":{},"sourceType":"module"}