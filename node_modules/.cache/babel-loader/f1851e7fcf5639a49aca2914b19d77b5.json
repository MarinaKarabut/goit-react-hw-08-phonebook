{"ast":null,"code":"import { configureStore, getDefaultMiddleware, combineReducers } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts-reducer'; // import { combineReducers, createStore } from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n\nconst persistConfig = {\n  key: 'root',\n  storage\n};\nconst middleware = [...getDefaultMiddleware(), logger];\nconst rootReducer = combineReducers({\n  contacts: contactsReducer\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development'\n});\nconst persistor = persistStore(store); // const rootReducer = combineReducers({\n//   contacts: contactsReducer,\n// });\n// const store = createStore(rootReducer, composeWithDevTools());\n// eslint-disable-next-line import/no-anonymous-default-export\n\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/Users/marina/Frontend/projects/js-react-projects/goit-react-hw-06-phonebook/src/redux/store.js"],"names":["configureStore","getDefaultMiddleware","combineReducers","logger","persistStore","persistReducer","storage","contactsReducer","persistConfig","key","middleware","rootReducer","contacts","persistedReducer","store","reducer","devTools","process","env","NODE_ENV","persistor"],"mappings":"AAAA,SACEA,cADF,EAEEC,oBAFF,EAGEC,eAHF,QAIO,kBAJP;AAKA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,eAAP,MAA4B,oBAA5B,C,CAEA;AACA;;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBH,EAAAA;AAFoB,CAAtB;AAKA,MAAMI,UAAU,GAAG,CAAC,GAAGT,oBAAoB,EAAxB,EAA4BE,MAA5B,CAAnB;AAEA,MAAMQ,WAAW,GAAGT,eAAe,CAAC;AAClCU,EAAAA,QAAQ,EAAEL;AADwB,CAAD,CAAnC;AAIA,MAAMM,gBAAgB,GAAGR,cAAc,CAACG,aAAD,EAAgBG,WAAhB,CAAvC;AAEA,MAAMG,KAAK,GAAGd,cAAc,CAAC;AAC3Be,EAAAA,OAAO,EAAEF,gBADkB;AAE3BH,EAAAA,UAF2B;AAG3BM,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB;AAHR,CAAD,CAA5B;AAMA,MAAMC,SAAS,GAAGhB,YAAY,CAACU,KAAD,CAA9B,C,CAEA;AACA;AACA;AAEA;AAEA;;AACA,eAAe;AAAEA,EAAAA,KAAF;AAASM,EAAAA;AAAT,CAAf","sourcesContent":["import {\n  configureStore,\n  getDefaultMiddleware,\n  combineReducers,\n} from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts-reducer';\n\n// import { combineReducers, createStore } from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nconst middleware = [...getDefaultMiddleware(), logger];\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\n// const rootReducer = combineReducers({\n//   contacts: contactsReducer,\n// });\n\n// const store = createStore(rootReducer, composeWithDevTools());\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { store, persistor };\n"]},"metadata":{},"sourceType":"module"}