{"ast":null,"code":"// import * as contactsApi from '../../client/Contacts/service/contacts-api';\nimport instance from '../../shared/services/basic-http-service';\nimport { fetchContactsRequest, fetchContactsSuccess, fetchContactsError, addContactRequest, addContactSuccess, addContactError, deleteContactRequest, deleteContactSuccess, deleteContactError } from './contacts-actions';\nexport const fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const {\n      data\n    } = await instance.get('/contacts');\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error.message));\n  }\n};\nexport const addContact = () => async dispatch => {\n  dispatch(addContactRequest());\n\n  try {\n    const {\n      data\n    } = await instance.get('/contacts');\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error.message));\n  }\n}; // export const addContact = (name, number) => dispatch => {\n//   const contact = {\n//     name,\n//     number,\n//   };\n//   dispatch(addContactRequest());\n//   contactsApi\n//     .addContact(contact)\n//     .then(({ data }) => dispatch(addContactSuccess(data)))\n//     .catch(error => dispatch(addContactError(error.message)));\n// };\n// export const deleteContact = id => dispatch => {\n//   dispatch(deleteContactRequest());\n//   contactsApi\n//     .deleteContact(id)\n//     .then(() => dispatch(deleteContactSuccess(id)))\n//     .catch(error => dispatch(deleteContactError(error.message)));\n// };","map":{"version":3,"sources":["/Users/marina/Frontend/projects/js-react-projects/goit-react-hw-08-phonebook/src/redux/contacts/contacts-operations.js"],"names":["instance","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","fetchContacts","dispatch","data","get","error","message","addContact"],"mappings":"AAAA;AAEA,OAAOA,QAAP,MAAqB,0CAArB;AAEA,SACEC,oBADF,EAEEC,oBAFF,EAGEC,kBAHF,EAIEC,iBAJF,EAKEC,iBALF,EAMEC,eANF,EAOEC,oBAPF,EAQEC,oBARF,EASEC,kBATF,QAUO,oBAVP;AAYA,OAAO,MAAMC,aAAa,GAAG,MAAM,MAAMC,QAAN,IAAkB;AACnDA,EAAAA,QAAQ,CAACV,oBAAoB,EAArB,CAAR;;AAEA,MAAI;AACF,UAAM;AAAEW,MAAAA;AAAF,QAAW,MAAMZ,QAAQ,CAACa,GAAT,CAAa,WAAb,CAAvB;AACAF,IAAAA,QAAQ,CAACT,oBAAoB,CAACU,IAAD,CAArB,CAAR;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACdH,IAAAA,QAAQ,CAACR,kBAAkB,CAACW,KAAK,CAACC,OAAP,CAAnB,CAAR;AACD;AACF,CATM;AAWP,OAAO,MAAMC,UAAU,GAAG,MAAM,MAAML,QAAN,IAAkB;AAChDA,EAAAA,QAAQ,CAACP,iBAAiB,EAAlB,CAAR;;AAEA,MAAI;AACF,UAAM;AAAEQ,MAAAA;AAAF,QAAW,MAAMZ,QAAQ,CAACa,GAAT,CAAa,WAAb,CAAvB;AACAF,IAAAA,QAAQ,CAACT,oBAAoB,CAACU,IAAD,CAArB,CAAR;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACdH,IAAAA,QAAQ,CAACR,kBAAkB,CAACW,KAAK,CAACC,OAAP,CAAnB,CAAR;AACD;AACF,CATM,C,CAWP;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["// import * as contactsApi from '../../client/Contacts/service/contacts-api';\n\nimport instance from '../../shared/services/basic-http-service';\n\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\n\nexport const fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const { data } = await instance.get('/contacts');\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error.message));\n  }\n};\n\nexport const addContact = () => async dispatch => {\n  dispatch(addContactRequest());\n\n  try {\n    const { data } = await instance.get('/contacts');\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error.message));\n  }\n};\n\n// export const addContact = (name, number) => dispatch => {\n//   const contact = {\n//     name,\n//     number,\n//   };\n\n//   dispatch(addContactRequest());\n\n//   contactsApi\n//     .addContact(contact)\n//     .then(({ data }) => dispatch(addContactSuccess(data)))\n//     .catch(error => dispatch(addContactError(error.message)));\n// };\n\n// export const deleteContact = id => dispatch => {\n//   dispatch(deleteContactRequest());\n\n//   contactsApi\n//     .deleteContact(id)\n//     .then(() => dispatch(deleteContactSuccess(id)))\n//     .catch(error => dispatch(deleteContactError(error.message)));\n// };\n"]},"metadata":{},"sourceType":"module"}