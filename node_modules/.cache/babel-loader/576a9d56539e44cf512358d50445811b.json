{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { fetchContactsSuccess, addContactSuccess, deleteContactSuccess, filterContacts } from './contacts-actions';\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, {\n    payload\n  }) => payload,\n  [addContactSuccess]: (state, {\n    payload\n  }) => [...state, payload],\n  [deleteContactSuccess]: (state, {\n    payload\n  }) => state.filter(({\n    id\n  }) => id !== payload)\n});\nconst filter = createReducer('', {\n  [filterContacts]: (_, {\n    payload\n  }) => payload\n});\nexport default combineReducers({\n  items,\n  filter\n});","map":{"version":3,"sources":["/Users/marina/Frontend/projects/js-react-projects/goit-react-hw-07-phonebook/src/redux/contacts-reducer.js"],"names":["combineReducers","createReducer","fetchContactsSuccess","addContactSuccess","deleteContactSuccess","filterContacts","items","_","payload","state","filter","id"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SACEC,oBADF,EAEEC,iBAFF,EAGEC,oBAHF,EAIEC,cAJF,QAKO,oBALP;AAOA,MAAMC,KAAK,GAAGL,aAAa,CAAC,EAAD,EAAK;AAC9B,GAACC,oBAAD,GAAwB,CAACK,CAAD,EAAI;AAAEC,IAAAA;AAAF,GAAJ,KAAoBA,OADd;AAE9B,GAACL,iBAAD,GAAqB,CAACM,KAAD,EAAQ;AAAED,IAAAA;AAAF,GAAR,KAAwB,CAAC,GAAGC,KAAJ,EAAWD,OAAX,CAFf;AAG9B,GAACJ,oBAAD,GAAwB,CAACK,KAAD,EAAQ;AAAED,IAAAA;AAAF,GAAR,KACtBC,KAAK,CAACC,MAAN,CAAa,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAYA,EAAE,KAAKH,OAAhC;AAJ4B,CAAL,CAA3B;AAOA,MAAME,MAAM,GAAGT,aAAa,CAAC,EAAD,EAAK;AAC/B,GAACI,cAAD,GAAkB,CAACE,CAAD,EAAI;AAAEC,IAAAA;AAAF,GAAJ,KAAoBA;AADP,CAAL,CAA5B;AAIA,eAAeR,eAAe,CAAC;AAC7BM,EAAAA,KAD6B;AAE7BI,EAAAA;AAF6B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactsSuccess,\n  addContactSuccess,\n  deleteContactSuccess,\n  filterContacts,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [filterContacts]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n"]},"metadata":{},"sourceType":"module"}