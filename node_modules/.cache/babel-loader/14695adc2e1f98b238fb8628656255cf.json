{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { fetchContactsSuccess, addContactSuccess, deleteContactSuccess, filterContacts } from './contacts-actions';\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (state, {\n    payload\n  }) => [...state, payload],\n  [addContactSuccess]: (state, {\n    payload\n  }) => [...state, payload],\n  [deleteContactSuccess]: (state, {\n    payload\n  }) => state.filter((_, idx) => idx !== payload)\n});\nconst filter = createReducer('', {\n  [filterContacts]: (_, {\n    payload\n  }) => payload\n});\nexport default combineReducers({\n  items,\n  filter\n});","map":{"version":3,"sources":["/Users/marina/Frontend/projects/js-react-projects/goit-react-hw-07-phonebook/src/redux/contacts-reducer.js"],"names":["combineReducers","createReducer","fetchContactsSuccess","addContactSuccess","deleteContactSuccess","filterContacts","items","state","payload","filter","_","idx"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SACEC,oBADF,EAEEC,iBAFF,EAGEC,oBAHF,EAIEC,cAJF,QAKO,oBALP;AAOA,MAAMC,KAAK,GAAGL,aAAa,CAAC,EAAD,EAAK;AAC9B,GAACC,oBAAD,GAAwB,CAACK,KAAD,EAAQ;AAAEC,IAAAA;AAAF,GAAR,KAAwB,CAAC,GAAGD,KAAJ,EAAWC,OAAX,CADlB;AAE9B,GAACL,iBAAD,GAAqB,CAACI,KAAD,EAAQ;AAAEC,IAAAA;AAAF,GAAR,KAAwB,CAAC,GAAGD,KAAJ,EAAWC,OAAX,CAFf;AAG9B,GAACJ,oBAAD,GAAwB,CAACG,KAAD,EAAQ;AAAEC,IAAAA;AAAF,GAAR,KACtBD,KAAK,CAACE,MAAN,CAAa,CAACC,CAAD,EAAIC,GAAJ,KAAYA,GAAG,KAAKH,OAAjC;AAJ4B,CAAL,CAA3B;AAOA,MAAMC,MAAM,GAAGR,aAAa,CAAC,EAAD,EAAK;AAC/B,GAACI,cAAD,GAAkB,CAACK,CAAD,EAAI;AAAEF,IAAAA;AAAF,GAAJ,KAAoBA;AADP,CAAL,CAA5B;AAIA,eAAeR,eAAe,CAAC;AAC7BM,EAAAA,KAD6B;AAE7BG,EAAAA;AAF6B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactsSuccess,\n  addContactSuccess,\n  deleteContactSuccess,\n  filterContacts,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (state, { payload }) => [...state, payload],\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter((_, idx) => idx !== payload),\n});\n\nconst filter = createReducer('', {\n  [filterContacts]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n"]},"metadata":{},"sourceType":"module"}