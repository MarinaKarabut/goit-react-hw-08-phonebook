{"ast":null,"code":"import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts-reducer'; // import { combineReducers, createStore } from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter']\n};\nconst middleware = [...getDefaultMiddleware({\n  serializableCheck: {\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n  }\n}), logger];\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer)\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development'\n});\nconst persistor = persistStore(store); // const rootReducer = combineReducers({\n//   contacts: contactsReducer,\n// });\n// const store = createStore(rootReducer, composeWithDevTools());\n// eslint-disable-next-line import/no-anonymous-default-export\n\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/Users/marina/Frontend/projects/js-react-projects/goit-react-hw-06-phonebook/src/redux/store.js"],"names":["configureStore","getDefaultMiddleware","logger","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","contactsReducer","contactsPersistConfig","key","blacklist","middleware","serializableCheck","ignoredActions","store","reducer","contacts","devTools","process","env","NODE_ENV","persistor"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,oBAAzB,QAAqD,kBAArD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SACEC,YADF,EAEEC,cAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,KAPF,EAQEC,QARF,QASO,eATP;AAUA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,eAAP,MAA4B,oBAA5B,C,CAEA;AACA;;AAEA,MAAMC,qBAAqB,GAAG;AAC5BC,EAAAA,GAAG,EAAE,UADuB;AAE5BH,EAAAA,OAF4B;AAG5BI,EAAAA,SAAS,EAAE,CAAC,QAAD;AAHiB,CAA9B;AAMA,MAAMC,UAAU,GAAG,CACjB,GAAGf,oBAAoB,CAAC;AACtBgB,EAAAA,iBAAiB,EAAE;AACjBC,IAAAA,cAAc,EAAE,CAACb,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AADC;AADG,CAAD,CADN,EAMjBR,MANiB,CAAnB;AASA,MAAMiB,KAAK,GAAGnB,cAAc,CAAC;AAC3BoB,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAEjB,cAAc,CAACS,qBAAD,EAAwBD,eAAxB;AADjB,GADkB;AAI3BI,EAAAA,UAJ2B;AAK3BM,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB;AALR,CAAD,CAA5B;AAQA,MAAMC,SAAS,GAAGvB,YAAY,CAACgB,KAAD,CAA9B,C,CAEA;AACA;AACA;AAEA;AAEA;;AACA,eAAe;AAAEA,EAAAA,KAAF;AAASO,EAAAA;AAAT,CAAf","sourcesContent":["import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts-reducer';\n\n// import { combineReducers, createStore } from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\n// const rootReducer = combineReducers({\n//   contacts: contactsReducer,\n// });\n\n// const store = createStore(rootReducer, composeWithDevTools());\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { store, persistor };\n"]},"metadata":{},"sourceType":"module"}