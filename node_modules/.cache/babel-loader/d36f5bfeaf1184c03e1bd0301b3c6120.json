{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './auth-actions';\nconst initialStateUser = {\n  name: '',\n  email: ''\n};\nconst initialStateToken = null;\nconst initialStateError = null;\nconst user = createReducer(initialStateUser, {\n  [actions.registerSuccess]: (_, {\n    payload\n  }) => payload.user,\n  [actions.loginSuccess]: (_, {\n    payload\n  }) => payload.user,\n  [actions.logoutSuccess]: () => initialStateUser,\n  [actions.getCurrentUserSuccess]: (_, {\n    payload\n  }) => payload\n});\nconst token = createReducer(initialStateToken, {\n  [actions.registerSuccess]: (_, {\n    payload\n  }) => payload.token,\n  [actions.loginSuccess]: (_, {\n    payload\n  }) => payload.token,\n  [actions.logoutSuccess]: () => initialStateToken\n});\nconst error = createReducer(initialStateError, {\n  [actions.registerError]: (_, {\n    payload\n  }) => payload,\n  [actions.registerSuccess]: () => initialStateError,\n  [actions.loginError]: (_, {\n    payload\n  }) => payload,\n  [actions.loginSuccess]: () => initialStateError,\n  [actions.logoutError]: (_, {\n    payload\n  }) => payload,\n  [actions.logoutSuccess]: () => initialStateError,\n  [actions.getCurrentUserError]: (_, {\n    payload\n  }) => payload\n});\nconst isAuthenticated = createReducer(false, {\n  [actions.registerSuccess]: () => true,\n  [actions.loginSuccess]: () => true,\n  [actions.getCurrentUserSuccess]: () => true,\n  [actions.registerError]: () => false,\n  [actions.loginError]: () => false,\n  [actions.getCurrentUserError]: () => false,\n  [actions.logoutSuccess]: () => false\n});\nexport default combineReducers({\n  user,\n  isAuthenticated,\n  token,\n  error\n});","map":{"version":3,"sources":["/Users/marina/Frontend/projects/js-react-projects/goit-react-hw-08-phonebook/src/redux/auth/auth-reducer.js"],"names":["combineReducers","createReducer","actions","initialStateUser","name","email","initialStateToken","initialStateError","user","registerSuccess","_","payload","loginSuccess","logoutSuccess","getCurrentUserSuccess","token","error","registerError","loginError","logoutError","getCurrentUserError","isAuthenticated"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,IAAI,EAAE,EADiB;AAEvBC,EAAAA,KAAK,EAAE;AAFgB,CAAzB;AAKA,MAAMC,iBAAiB,GAAG,IAA1B;AAEA,MAAMC,iBAAiB,GAAG,IAA1B;AAEA,MAAMC,IAAI,GAAGP,aAAa,CAACE,gBAAD,EAAmB;AAC3C,GAACD,OAAO,CAACO,eAAT,GAA2B,CAACC,CAAD,EAAI;AAAEC,IAAAA;AAAF,GAAJ,KAAoBA,OAAO,CAACH,IADZ;AAE3C,GAACN,OAAO,CAACU,YAAT,GAAwB,CAACF,CAAD,EAAI;AAAEC,IAAAA;AAAF,GAAJ,KAAoBA,OAAO,CAACH,IAFT;AAG3C,GAACN,OAAO,CAACW,aAAT,GAAyB,MAAMV,gBAHY;AAI3C,GAACD,OAAO,CAACY,qBAAT,GAAiC,CAACJ,CAAD,EAAI;AAAEC,IAAAA;AAAF,GAAJ,KAAoBA;AAJV,CAAnB,CAA1B;AAOA,MAAMI,KAAK,GAAGd,aAAa,CAACK,iBAAD,EAAoB;AAC7C,GAACJ,OAAO,CAACO,eAAT,GAA2B,CAACC,CAAD,EAAI;AAAEC,IAAAA;AAAF,GAAJ,KAAoBA,OAAO,CAACI,KADV;AAE7C,GAACb,OAAO,CAACU,YAAT,GAAwB,CAACF,CAAD,EAAI;AAAEC,IAAAA;AAAF,GAAJ,KAAoBA,OAAO,CAACI,KAFP;AAG7C,GAACb,OAAO,CAACW,aAAT,GAAyB,MAAMP;AAHc,CAApB,CAA3B;AAMA,MAAMU,KAAK,GAAGf,aAAa,CAACM,iBAAD,EAAoB;AAC7C,GAACL,OAAO,CAACe,aAAT,GAAyB,CAACP,CAAD,EAAI;AAAEC,IAAAA;AAAF,GAAJ,KAAoBA,OADA;AAE7C,GAACT,OAAO,CAACO,eAAT,GAA2B,MAAMF,iBAFY;AAG7C,GAACL,OAAO,CAACgB,UAAT,GAAsB,CAACR,CAAD,EAAI;AAAEC,IAAAA;AAAF,GAAJ,KAAoBA,OAHG;AAI7C,GAACT,OAAO,CAACU,YAAT,GAAwB,MAAML,iBAJe;AAK7C,GAACL,OAAO,CAACiB,WAAT,GAAuB,CAACT,CAAD,EAAI;AAAEC,IAAAA;AAAF,GAAJ,KAAoBA,OALE;AAM7C,GAACT,OAAO,CAACW,aAAT,GAAyB,MAAMN,iBANc;AAO7C,GAACL,OAAO,CAACkB,mBAAT,GAA+B,CAACV,CAAD,EAAI;AAAEC,IAAAA;AAAF,GAAJ,KAAoBA;AAPN,CAApB,CAA3B;AAUA,MAAMU,eAAe,GAAGpB,aAAa,CAAC,KAAD,EAAQ;AAC3C,GAACC,OAAO,CAACO,eAAT,GAA2B,MAAM,IADU;AAE3C,GAACP,OAAO,CAACU,YAAT,GAAwB,MAAM,IAFa;AAG3C,GAACV,OAAO,CAACY,qBAAT,GAAiC,MAAM,IAHI;AAI3C,GAACZ,OAAO,CAACe,aAAT,GAAyB,MAAM,KAJY;AAK3C,GAACf,OAAO,CAACgB,UAAT,GAAsB,MAAM,KALe;AAM3C,GAAChB,OAAO,CAACkB,mBAAT,GAA+B,MAAM,KANM;AAO3C,GAAClB,OAAO,CAACW,aAAT,GAAyB,MAAM;AAPY,CAAR,CAArC;AAUA,eAAeb,eAAe,CAAC;AAC7BQ,EAAAA,IAD6B;AAE7Ba,EAAAA,eAF6B;AAG7BN,EAAAA,KAH6B;AAI7BC,EAAAA;AAJ6B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport actions from './auth-actions';\n\nconst initialStateUser = {\n  name: '',\n  email: '',\n};\n\nconst initialStateToken = null;\n\nconst initialStateError = null;\n\nconst user = createReducer(initialStateUser, {\n  [actions.registerSuccess]: (_, { payload }) => payload.user,\n  [actions.loginSuccess]: (_, { payload }) => payload.user,\n  [actions.logoutSuccess]: () => initialStateUser,\n  [actions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(initialStateToken, {\n  [actions.registerSuccess]: (_, { payload }) => payload.token,\n  [actions.loginSuccess]: (_, { payload }) => payload.token,\n  [actions.logoutSuccess]: () => initialStateToken,\n});\n\nconst error = createReducer(initialStateError, {\n  [actions.registerError]: (_, { payload }) => payload,\n  [actions.registerSuccess]: () => initialStateError,\n  [actions.loginError]: (_, { payload }) => payload,\n  [actions.loginSuccess]: () => initialStateError,\n  [actions.logoutError]: (_, { payload }) => payload,\n  [actions.logoutSuccess]: () => initialStateError,\n  [actions.getCurrentUserError]: (_, { payload }) => payload,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [actions.registerSuccess]: () => true,\n  [actions.loginSuccess]: () => true,\n  [actions.getCurrentUserSuccess]: () => true,\n  [actions.registerError]: () => false,\n  [actions.loginError]: () => false,\n  [actions.getCurrentUserError]: () => false,\n  [actions.logoutSuccess]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  isAuthenticated,\n  token,\n  error,\n});\n"]},"metadata":{},"sourceType":"module"}