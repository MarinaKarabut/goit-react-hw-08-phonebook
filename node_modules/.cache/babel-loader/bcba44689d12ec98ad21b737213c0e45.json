{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit'; // import types from './contacts-types';\n\nconst items = createReducer([], {\n  [types.ADD]: (state, {\n    payload\n  }) => [...state, payload],\n  [types.DELETE]: (state, {\n    payload\n  }) => state.filter(({\n    id\n  }) => id !== payload)\n}); // const items = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case types.ADD:\n//       return [...state, payload];\n//     case types.DELETE:\n//       return state.filter(({ id }) => id !== payload);\n//     default:\n//       return state;\n//   }\n// };\n\nconst filter = (state = '', {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case types.FILTER:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  items,\n  filter\n});","map":{"version":3,"sources":["/Users/marina/Frontend/projects/js-react-projects/goit-react-hw-06-phonebook/src/redux/contacts-reducer.js"],"names":["combineReducers","createReducer","items","types","ADD","state","payload","DELETE","filter","id","type","FILTER"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,kBAA9B,C,CAEA;;AAEA,MAAMC,KAAK,GAAGD,aAAa,CAAC,EAAD,EAAK;AAC9B,GAACE,KAAK,CAACC,GAAP,GAAa,CAACC,KAAD,EAAQ;AAAEC,IAAAA;AAAF,GAAR,KAAwB,CAAC,GAAGD,KAAJ,EAAWC,OAAX,CADP;AAE9B,GAACH,KAAK,CAACI,MAAP,GAAgB,CAACF,KAAD,EAAQ;AAAEC,IAAAA;AAAF,GAAR,KACdD,KAAK,CAACG,MAAN,CAAa,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAYA,EAAE,KAAKH,OAAhC;AAH4B,CAAL,CAA3B,C,CAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,MAAME,MAAM,GAAG,CAACH,KAAK,GAAG,EAAT,EAAa;AAAEK,EAAAA,IAAF;AAAQJ,EAAAA;AAAR,CAAb,KAAmC;AAChD,UAAQI,IAAR;AACE,SAAKP,KAAK,CAACQ,MAAX;AACE,aAAOL,OAAP;;AAEF;AACE,aAAOD,KAAP;AALJ;AAOD,CARD;;AAUA,eAAeL,eAAe,CAAC;AAC7BE,EAAAA,KAD6B;AAE7BM,EAAAA;AAF6B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\n// import types from './contacts-types';\n\nconst items = createReducer([], {\n  [types.ADD]: (state, { payload }) => [...state, payload],\n  [types.DELETE]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\n// const items = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case types.ADD:\n//       return [...state, payload];\n//     case types.DELETE:\n//       return state.filter(({ id }) => id !== payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\nconst filter = (state = '', { type, payload }) => {\n  switch (type) {\n    case types.FILTER:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  items,\n  filter,\n});\n"]},"metadata":{},"sourceType":"module"}