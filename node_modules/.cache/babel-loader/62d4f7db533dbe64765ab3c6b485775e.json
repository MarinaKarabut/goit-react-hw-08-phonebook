{"ast":null,"code":"import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'; // import logger from 'redux-logger';\n\nimport { persistReducer, persistStore, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\nimport authReducer from './auth/auth-reducer';\nconst middleware = [...getDefaultMiddleware({\n  serializableCheck: {\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n  }\n}) // logger,\n];\nconst authPersistConfig = {\n  key: 'token',\n  storage,\n  whitelist: ['token']\n};\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    auth: persistReducer(authPersistConfig, authReducer)\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development'\n});\nconst persistot = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/Users/marina/Frontend/projects/js-react-projects/goit-react-hw-08-phonebook/src/redux/store.js"],"names":["configureStore","getDefaultMiddleware","persistReducer","persistStore","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","contactsReducer","authReducer","middleware","serializableCheck","ignoredActions","authPersistConfig","key","whitelist","store","reducer","contacts","auth","devTools","process","env","NODE_ENV","persistot","persistor"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,oBAAzB,QAAqD,kBAArD,C,CACA;;AACA,SACEC,cADF,EAEEC,YAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,KAPF,EAQEC,QARF,QASO,eATP;AAUA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AAEA,MAAMC,UAAU,GAAG,CACjB,GAAGZ,oBAAoB,CAAC;AACtBa,EAAAA,iBAAiB,EAAE;AACjBC,IAAAA,cAAc,EAAE,CAACX,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AADC;AADG,CAAD,CADN,CAMjB;AANiB,CAAnB;AASA,MAAMO,iBAAiB,GAAG;AACxBC,EAAAA,GAAG,EAAE,OADmB;AAExBP,EAAAA,OAFwB;AAGxBQ,EAAAA,SAAS,EAAE,CAAC,OAAD;AAHa,CAA1B;AAMA,MAAMC,KAAK,GAAGnB,cAAc,CAAC;AAC3BoB,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAEV,eADH;AAEPW,IAAAA,IAAI,EAAEpB,cAAc,CAACc,iBAAD,EAAoBJ,WAApB;AAFb,GADkB;AAK3BC,EAAAA,UAL2B;AAM3BU,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB;AANR,CAAD,CAA5B;AASA,MAAMC,SAAS,GAAGxB,YAAY,CAACgB,KAAD,CAA9B;AAEA,eAAe;AAAEA,EAAAA,KAAF;AAASS,EAAAA;AAAT,CAAf","sourcesContent":["import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n// import logger from 'redux-logger';\nimport {\n  persistReducer,\n  persistStore,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport contactsReducer from './contacts/contacts-reducer';\nimport authReducer from './auth/auth-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  // logger,\n];\n\nconst authPersistConfig = {\n  key: 'token',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    auth: persistReducer(authPersistConfig, authReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistot = persistStore(store);\n\nexport default { store, persistor };\n"]},"metadata":{},"sourceType":"module"}