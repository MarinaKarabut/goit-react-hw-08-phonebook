{"ast":null,"code":"var _jsxFileName = \"/Users/marina/Frontend/projects/js-react-projects/goit-react-hw-08-phonebook/src/client/PrivetRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getIsAuthenticated } from '../redux/auth/auth-selectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => /*#__PURE__*/_jsxDEV(Route, { ...routeProps,\n  render: props => isAuthenticated ? /*#__PURE__*/_jsxDEV(Component, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 25\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 52\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 3\n}, this);\n\n_c = PrivateRoute;\n\nconst mapStateToProps = state => ({\n  isAuthenticated: getIsAuthenticated(state)\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/marina/Frontend/projects/js-react-projects/goit-react-hw-08-phonebook/src/client/PrivetRoute.js"],"names":["React","Route","Redirect","connect","getIsAuthenticated","PrivateRoute","component","Component","isAuthenticated","redirectTo","routeProps","props","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,8BAAnC;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,SAAS,EAAEC,SADS;AAEpBC,EAAAA,eAFoB;AAGpBC,EAAAA,UAHoB;AAIpB,KAAGC;AAJiB,CAAD,kBAMnB,QAAC,KAAD,OACMA,UADN;AAEE,EAAA,MAAM,EAAEC,KAAK,IACXH,eAAe,gBAAG,QAAC,SAAD,OAAeG;AAAf;AAAA;AAAA;AAAA;AAAA,UAAH,gBAA8B,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAHjD;AAAA;AAAA;AAAA;AAAA,QANF;;KAAMN,Y;;AAcN,MAAMO,eAAe,GAAGC,KAAK,KAAK;AAChCL,EAAAA,eAAe,EAAEJ,kBAAkB,CAACS,KAAD;AADH,CAAL,CAA7B;;AAIA,eAAeV,OAAO,CAACS,eAAD,CAAP,CAAyBP,YAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getIsAuthenticated } from '../redux/auth/auth-selectors';\n\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n"]},"metadata":{},"sourceType":"module"}