{"ast":null,"code":"var _jsxFileName = \"/Users/marina/Frontend/projects/js-react-projects/goit-react-hw-06-phonebook/src/client/components/ContactList/ContactList.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ContactsListItem from '../ContactListItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ContactList({\n  contacts,\n  onDeleteContacts\n}) {\n  const contactElements = contacts.map(({\n    id,\n    ...props\n  }, idx) => /*#__PURE__*/_jsxDEV(ContactsListItem, { ...props,\n    onClick: () => onDeleteContacts(idx)\n  }, id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: contactElements\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_c = ContactList;\n;\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired\n  }).isRequired),\n  onDeleteContacts: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"sources":["/Users/marina/Frontend/projects/js-react-projects/goit-react-hw-06-phonebook/src/client/components/ContactList/ContactList.jsx"],"names":["React","connect","PropTypes","ContactsListItem","ContactList","contacts","onDeleteContacts","contactElements","map","id","props","idx","mapStateToProps","mapDispatchToProps","propTypes","arrayOf","shape","string","isRequired","name","number","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;AAMA,SAASC,WAAT,CAAqB;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAArB,EAAmD;AACjD,QAAMC,eAAe,GAAGF,QAAQ,CAACG,GAAT,CAAa,CAAC;AAAEC,IAAAA,EAAF;AAAM,OAAGC;AAAT,GAAD,EAAmBC,GAAnB,kBACjC,QAAC,gBAAD,OAAgCD,KAAhC;AAAuC,IAAA,OAAO,EAAE,MAAKJ,gBAAgB,CAACK,GAAD;AAArE,KAAuBF,EAAvB;AAAA;AAAA;AAAA;AAAA,UADoB,CAAxB;AAKE,sBACI;AAAA,cACKF;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;KAXQH,W;AAWR;AAKD,eAAeH,OAAO,CAACW,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,WAA7C,CAAf;AAEAA,WAAW,CAACU,SAAZ,GAAwB;AACpBT,EAAAA,QAAQ,EAAEH,SAAS,CAACa,OAAV,CACRb,SAAS,CAACc,KAAV,CAAgB;AACdP,IAAAA,EAAE,EAAEP,SAAS,CAACe,MAAV,CAAiBC,UADP;AAEdC,IAAAA,IAAI,EAAEjB,SAAS,CAACe,MAAV,CAAiBC,UAFT;AAGdE,IAAAA,MAAM,EAAElB,SAAS,CAACe,MAAV,CAAiBC;AAHX,GAAhB,EAIGA,UALK,CADU;AAQpBZ,EAAAA,gBAAgB,EAAEJ,SAAS,CAACmB,IAAV,CAAeH;AARb,CAAxB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types'\nimport ContactsListItem from '../ContactListItem'\n\n\n\n\n\nfunction ContactList({contacts, onDeleteContacts}) {\n  const contactElements = contacts.map(({ id, ...props }, idx) => (\n      <ContactsListItem key={id}  {...props} onClick={()=> onDeleteContacts(idx)}\n      />\n    ))\n        \n    return (\n        <ul>\n            {contactElements}\n        </ul>\n    )\n};\n\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      }).isRequired,\n    ),\n    onDeleteContacts: PropTypes.func.isRequired,\n  };\n  \n"]},"metadata":{},"sourceType":"module"}