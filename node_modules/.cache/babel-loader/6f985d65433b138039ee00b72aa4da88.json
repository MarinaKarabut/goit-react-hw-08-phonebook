{"ast":null,"code":"import React from'react';import{connect}from'react-redux';import{v4 as uuidv4}from'uuid';import{filterContacts}from'../../../../redux/contacts/contacts-actions';import{getFilterContacts}from'../../../../redux/contacts/selectors';import styles from'./Filter.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Filter=function Filter(_ref){var value=_ref.value,onChange=_ref.onChange;var id=uuidv4();return/*#__PURE__*/_jsxs(\"label\",{htmlFor:id,children:[\"Finds contacts by name \",/*#__PURE__*/_jsx(\"input\",{className:styles.input,type:\"text\",value:value,onChange:onChange,id:id})]});};var mapStateToProps=function mapStateToProps(state){return{value:getFilterContacts(state)};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onChange:function onChange(_ref2){var target=_ref2.target;return dispatch(filterContacts(target.value));}};};export default connect(mapStateToProps,mapDispatchToProps)(Filter);","map":{"version":3,"sources":["/Users/marina/Frontend/projects/js-react-projects/goit-react-hw-08-phonebook/src/client/Contacts/components/Filter/Filter.jsx"],"names":["React","connect","v4","uuidv4","filterContacts","getFilterContacts","styles","Filter","value","onChange","id","input","mapStateToProps","state","mapDispatchToProps","dispatch","target"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,OAASC,EAAE,GAAIC,CAAAA,MAAf,KAA6B,MAA7B,CACA,OAASC,cAAT,KAA+B,6CAA/B,CACA,OAAQC,iBAAR,KAAgC,sCAAhC,CAEA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,C,wFAGA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAAyB,IAAtBC,CAAAA,KAAsB,MAAtBA,KAAsB,CAAfC,QAAe,MAAfA,QAAe,CACtC,GAAMC,CAAAA,EAAE,CAAGP,MAAM,EAAjB,CACE,mBACI,eAAO,OAAO,CAAEO,EAAhB,kDACyB,cACvB,SAAS,CAAIJ,MAAM,CAACK,KADG,CAEvB,IAAI,CAAC,MAFkB,CAGvB,KAAK,CAAIH,KAHc,CAIvB,QAAQ,CAAEC,QAJa,CAKvB,EAAE,CAAEC,EALmB,EADzB,GADJ,CAYH,CAdD,CAgBA,GAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCL,KAAK,CAAEH,iBAAiB,CAACQ,KAAD,CADU,CAAZ,EAAxB,CAKA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,QAAI,CACrCN,QAAQ,CAAE,4BAAEO,CAAAA,MAAF,OAAEA,MAAF,OAAcD,CAAAA,QAAQ,CAACX,cAAc,CAACY,MAAM,CAACR,KAAR,CAAf,CAAtB,EAD2B,CAAJ,EAAnC,CAKA,cAAeP,CAAAA,OAAO,CAACW,eAAD,CAAkBE,kBAAlB,CAAP,CAA6CP,MAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types'\nimport { v4 as uuidv4 } from 'uuid';\nimport { filterContacts } from '../../../../redux/contacts/contacts-actions'\nimport {getFilterContacts} from '../../../../redux/contacts/selectors'\n\nimport styles from './Filter.module.css'\n\n\nconst Filter = ({ value, onChange }) => {\n  const id = uuidv4();\n    return (\n        <label htmlFor={id}>\n          Finds contacts by name <input\n          className = {styles.input} \n          type=\"text\"\n          value = {value}\n          onChange={onChange}\n          id={id}\n          />\n      \n        </label>\n    )\n};\n\nconst mapStateToProps = (state) => ({\n  value: getFilterContacts(state)\n  \n})\n\nconst mapDispatchToProps = dispatch =>({\n  onChange: ({target}) => dispatch(filterContacts(target.value))\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}