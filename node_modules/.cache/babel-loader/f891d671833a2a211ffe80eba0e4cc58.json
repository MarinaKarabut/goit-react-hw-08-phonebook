{"ast":null,"code":"var _jsxFileName = \"/Users/marina/Frontend/projects/js-react-projects/goit-react-hw-06-phonebook/src/client/Phonebook/Phonebook.jsx\";\nimport React, { Component } from 'react';\nimport ContactForm from '../components/ContactForm';\nimport Filter from '../components/Filter/Filter';\nimport ContactList from '../components/ContactList/ContactList';\nimport { v4 as uuidv4 } from 'uuid';\nimport styles from './Phonebook.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Phonebook extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      contacts: [// { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n        // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n        // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n        // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n      ],\n      filter: ''\n    };\n\n    this.onDeleteContacts = idx => {\n      this.setState(({\n        contacts\n      }) => {\n        const newContacts = [...contacts];\n        newContacts.splice(idx, 1);\n        return {\n          contacts: newContacts\n        };\n      });\n    };\n\n    this.handleChange = ({\n      target\n    }) => {\n      const {\n        value\n      } = target;\n      this.setState({\n        filter: value\n      });\n    };\n\n    this.getVisibleContacts = () => {\n      const {\n        contacts,\n        filter\n      } = this.state;\n      const normalizedFilter = filter.toLowerCase();\n\n      if (!filter) {\n        return contacts;\n      }\n\n      return contacts.filter(({\n        name\n      }) => name.toLowerCase().includes(normalizedFilter));\n    };\n  }\n\n  componentDidMount() {\n    const contactsList = JSON.parse(localStorage.getItem('contacts'));\n    this.setState({\n      contacts: contactsList || []\n    });\n  }\n\n  componentDidUpdate() {\n    const {\n      contacts\n    } = this.state;\n    const contactsList = JSON.stringify(contacts);\n    localStorage.setItem('contacts', contactsList);\n  } // addContacts = ({ name, number }) => {\n  //   const { contacts } = this.state;\n  //   const newContact = {\n  //     id: uuidv4(),\n  //     name,\n  //     number,\n  //   };\n  //   if (\n  //     contacts.find(\n  //       ({ name }) => name.toLowerCase() === newContact.name.toLowerCase(),\n  //     )\n  //   ) {\n  //     alert(`${newContact.name} is already in contacts!`);\n  //   } else if (contacts.find(({ number }) => number === newContact.number)) {\n  //     alert(`${newContact.number} is already in contacts!`);\n  //   } else {\n  //   this.setState(({ contacts }) => ({\n  //     contacts: [...contacts, newContact],\n  //   }));\n  //   }\n  // };\n\n\n  render() {\n    const {\n      filter,\n      contacts\n    } = this.state;\n    const {\n      handleChange,\n      addContacts,\n      onDeleteContacts,\n      getVisibleContacts\n    } = this;\n    const visibleContacts = getVisibleContacts();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.box,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.tittle,\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        onSubmit: addContacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles.tittle,\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), contacts.length > 1 && /*#__PURE__*/_jsxDEV(Filter, {\n        value: filter,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), contacts.length > 0 ? /*#__PURE__*/_jsxDEV(ContactList, {\n        contacts: visibleContacts,\n        onDeleteContacts: onDeleteContacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.notification,\n        children: \"Your phonebook is empty. Please add contact.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Phonebook;","map":{"version":3,"sources":["/Users/marina/Frontend/projects/js-react-projects/goit-react-hw-06-phonebook/src/client/Phonebook/Phonebook.jsx"],"names":["React","Component","ContactForm","Filter","ContactList","v4","uuidv4","styles","Phonebook","state","contacts","filter","onDeleteContacts","idx","setState","newContacts","splice","handleChange","target","value","getVisibleContacts","normalizedFilter","toLowerCase","name","includes","componentDidMount","contactsList","JSON","parse","localStorage","getItem","componentDidUpdate","stringify","setItem","render","addContacts","visibleContacts","box","tittle","length","notification"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport ContactForm from '../components/ContactForm';\nimport Filter from '../components/Filter/Filter';\nimport ContactList from '../components/ContactList/ContactList';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport styles from './Phonebook.module.css';\n\nclass Phonebook extends Component {\n  state = {\n    contacts: [\n      // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n   componentDidMount() {\n    const contactsList = JSON.parse(localStorage.getItem('contacts'))\n    this.setState({ contacts: contactsList || []})\n\n    }\n\n  componentDidUpdate() {\n    const { contacts } = this.state\n    const contactsList = JSON.stringify(contacts)\n    localStorage.setItem('contacts', contactsList)\n  }\n\n\n  // addContacts = ({ name, number }) => {\n  //   const { contacts } = this.state;\n  //   const newContact = {\n  //     id: uuidv4(),\n  //     name,\n  //     number,\n  //   };\n  //   if (\n  //     contacts.find(\n  //       ({ name }) => name.toLowerCase() === newContact.name.toLowerCase(),\n  //     )\n  //   ) {\n  //     alert(`${newContact.name} is already in contacts!`);\n  //   } else if (contacts.find(({ number }) => number === newContact.number)) {\n  //     alert(`${newContact.number} is already in contacts!`);\n  //   } else {\n  //   this.setState(({ contacts }) => ({\n  //     contacts: [...contacts, newContact],\n  //   }));\n  //   }\n  // };\n\n  onDeleteContacts = idx => {\n    this.setState(({ contacts }) => {\n      const newContacts = [...contacts];\n      newContacts.splice(idx, 1);\n      return {\n        contacts: newContacts,\n      };\n    });\n  };\n\n  handleChange = ({target}) => {\n    const { value } = target;\n    this.setState({ filter: value });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    if (!filter) {\n      return contacts\n    }\n\n    return contacts.filter(({name}) => name.toLowerCase().includes(normalizedFilter));\n  };\n\n  render() {\n    const { filter, contacts } = this.state;\n    const {\n      handleChange,\n      addContacts,\n      onDeleteContacts,\n      getVisibleContacts,\n    } = this;\n\n    const visibleContacts = getVisibleContacts();\n\n    return (\n      <div className={styles.box}>\n        <h1 className={styles.tittle}>Phonebook</h1>\n        <ContactForm onSubmit={addContacts} />\n        <h2 className={styles.tittle}>Contacts</h2>\n        {contacts.length > 1 && (\n          <Filter value={filter} onChange={handleChange} />\n        )}\n        {(contacts.length >0) ? (\n          <ContactList\n            contacts={visibleContacts}\n            onDeleteContacts={onDeleteContacts}\n          />\n        ) : (\n          <p className={styles.notification}>\n            Your phonebook is empty. Please add contact.\n          </p>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Phonebook;\n"]},"metadata":{},"sourceType":"module"}