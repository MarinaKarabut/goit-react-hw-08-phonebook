{"ast":null,"code":"var _jsxFileName = \"/Users/marina/Frontend/projects/js-react-projects/goit-react-hw-06-phonebook/src/client/components/ContactListItem/ContactListItem.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport contactsActions from '../../../redux/contacts-actions';\nimport styles from './ContactListItem.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ContactListItem({\n  name,\n  number,\n  onClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: styles.list,\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), \" : \", /*#__PURE__*/_jsxDEV(\"span\", {\n      children: number\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 60\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.btn,\n      onClick: onClick,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n\n_c = ContactListItem;\n;\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContacts: id => dispatch(contactsActions.deleteContacts(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactListItem\");","map":{"version":3,"sources":["/Users/marina/Frontend/projects/js-react-projects/goit-react-hw-06-phonebook/src/client/components/ContactListItem/ContactListItem.jsx"],"names":["React","connect","PropTypes","contactsActions","styles","ContactListItem","name","number","onClick","list","btn","mapStateToProps","state","contacts","items","mapDispatchToProps","dispatch","onDeleteContacts","id","deleteContacts","propTypes","string","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AAEA,OAAOC,MAAP,MAAmB,8BAAnB;;;AAEA,SAASC,eAAT,CAAyB;AAACC,EAAAA,IAAD;AAAOC,EAAAA,MAAP;AAAeC,EAAAA;AAAf,CAAzB,EAAkD;AAC9C,sBACI;AAAA,4BACI;AAAM,MAAA,SAAS,EAAGJ,MAAM,CAACK,IAAzB;AAAA,gBAAgCH;AAAhC;AAAA;AAAA;AAAA;AAAA,YADJ,sBACmD;AAAA,gBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,YADnD,eAEI;AAAQ,MAAA,SAAS,EAAEH,MAAM,CAACM,GAA1B;AAA+B,MAAA,OAAO,EAAEF,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;KAPQH,e;AAOR;;AAED,MAAMM,eAAe,GAAIC,KAAD,KAAY;AACjCC,EAAAA,QAAQ,EAAED,KAAK,CAACC,QAAN,CAAeC;AADQ,CAAZ,CAAxB;;AAKA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACtCC,EAAAA,gBAAgB,EAAGC,EAAD,IAAQF,QAAQ,CAAEb,eAAe,CAACgB,cAAhB,CAA+BD,EAA/B,CAAF;AADI,CAAL,CAAnC;;AAIA,eAAejB,OAAO,CAACU,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CV,eAA7C,CAAf;AAEAA,eAAe,CAACe,SAAhB,GAA4B;AACxBd,EAAAA,IAAI,EAAEJ,SAAS,CAACmB,MAAV,CAAiBC,UADC;AAExBf,EAAAA,MAAM,EAAEL,SAAS,CAACmB,MAAV,CAAiBC,UAFD;AAGxBd,EAAAA,OAAO,EAAEN,SAAS,CAACqB,IAAV,CAAeD;AAHA,CAA5B","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types'\nimport contactsActions from '../../../redux/contacts-actions'\n\nimport styles from './ContactListItem.module.css'\n\nfunction ContactListItem({name, number, onClick}) {\n    return (\n        <li>\n            <span className ={styles.list}>{name}</span> : <span>{number}</span>\n            <button className={styles.btn} onClick={onClick}>Delete</button>\n      \n        </li>)\n};\n\nconst mapStateToProps = (state) => ({\n   contacts: state.contacts.items,\n  \n})\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContacts: (id) => dispatch (contactsActions.deleteContacts(id))\n}) \n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\n\nContactListItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n}"]},"metadata":{},"sourceType":"module"}